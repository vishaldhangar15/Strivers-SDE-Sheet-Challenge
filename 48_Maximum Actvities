#include<algorithm>
bool comp(const pair<int,int> &pair1 , const pair<int,int> &pair2)
{
    if(pair1.first != pair2.first)
        return pair1.first < pair2.first;
    else
        return pair1.second < pair2.second;
}

int maximumActivities(vector<int> &start, vector<int> &end) {
    // Write your code here.
    vector<pair<int,int>> arr;
    for(int i=0 ; i < start.size() ; i++)
    {
        arr.push_back({start[i] , end[i]});
    }
    sort(arr.begin() , arr.end() ,  comp);

    int activities = 1;
    int endtime = arr[0].second;
    for(int i=1 ; i < start.size() ; i++)
    {
        
        if(arr[i].first >= endtime)
        {
            activities++;
            endtime = arr[i].second;
        }
        else
            endtime = min(endtime , arr[i].second);
        
    }

    return activities;
   

}
