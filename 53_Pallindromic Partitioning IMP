#include <bits/stdc++.h> 
bool ispalline(string s ,int lo ,int hi)
{
    // int lo=0;
    // int hi=s.length()-1;
    while(lo <= hi)
    {
        if(s[lo] != s[hi])
            return false;
        lo++;
        hi--;
    }
    return true;
}

void func(int index , string &s,vector<vector<string>>&ans,vector<string>&path)
{
    if(index==s.size()){
        ans.push_back(path);
        return;
    }

    for(int i=index;i<s.size();i++)
    {
        if(ispalline(s,index,i))
        {
            path.push_back(s.substr(index,i-index+1));
            func(i+1,s,ans,path);
            path.pop_back();
        }
    }
    
}   



vector<vector<string>> partition(string &s) 
{
    vector<vector<string>>ans;
    vector<string>path;
    func(0,s,ans,path);
    return ans;

}
