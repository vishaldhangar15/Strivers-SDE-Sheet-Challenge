int topdown(int i , int j , string a , string b , vector<vector<int>> &dp)
  {
      if(i==a.length()) return b.length()-j;
      if(j==b.length()) return a.length()-i;
      if(dp[i][j]!=-1) return dp[i][j];
      
      int ans=0;
      if(a[i]==b[j]) return topdown(i+1 , j+1 , a , b ,dp);
      else{
          int include=1+topdown(i , j+1 , a , b , dp);
          int del=1+topdown(i+1  , j , a ,b ,dp);
          int replace=1+topdown(i+1 , j+1 , a , b ,dp);
          
          ans=min(include ,min(del , replace));
          
          return dp[i][j]=ans;
      }
      
  }
int editDistance(string s, string t)
{
    //write you code here
       // return rec(0 , 0 , s , t);
        int n=s.length();
        int m=t.length();
        vector<vector<int>> dp( n , vector<int>(m ,-1));
        
        return topdown(0 , 0 ,s , t ,dp);
}
